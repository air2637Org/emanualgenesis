using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace MaintenanceContractFormsMgmt.Entity
{
    public class ContractForm
    {
        #region DB bindings
        public const string DB_TABLE_NAME = "contract";
        public const string DB_ID = "id";
        public const string User_ID = "account_manager_id";
        public const string CUSTOMER_ID = "customer_id";
        public const string CONTRACT_TYPE_ID = "contract_type_id";

        public const string AGREEMENT_NO = "agreement_no";
        public const string EFFECTIVE_DATE = "effective_date";
        public const string EXPIRY_DATE = "expiry_date";
        public const string TOTAL_CONTRACT_AMT = "total_contract_amt";
        public const string REMARK = "remark";
        public const string STATUS_FLG = "status_flg";
        #endregion

        #region Json properties
        [JsonProperty("id")]
        public int id { get; set; }
        [JsonProperty("UserId")]
        public int UserId { get; set; }
        [JsonProperty("CustomerId")]
        public int CustomerId { get; set; } // wcf should just pass customerId as a parameter
        [JsonProperty("ContractTypeId")]
        public int ContractTypeId { get; set; }  // wcf should just pass ContractTypeId as a parameter
        [JsonProperty("AgreementNo")]
        public string AgreementNo { get; set; } //AgreementNo should be generated by system, not retrieved from front-end stream
        [JsonProperty("EffectiveDate")]
        public DateTime EffectiveDate { get; set; }
        [JsonProperty("ExpiryDate")]
        public DateTime ExpiryDate { get; set; }
        [JsonProperty("TotalContractAmt")]
        public double TotalContractAmt { get; set; }
        [JsonProperty("Remarks")]
        public string Remarks { get; set; }
        [JsonProperty("StatusFlg")]
        public int StatusFlg { get; set; }
        #endregion

        public ContractForm() { }
        public ContractForm(string jsonString)
        {
            ContractForm cf = null;
            if (!string.IsNullOrWhiteSpace(jsonString))
            {
                try
                {
                    cf = JsonConvert.DeserializeObject<ContractForm>(jsonString);
                    UserId = cf.UserId;
                    CustomerId = cf.CustomerId;
                    //AgreementNo = cf.AgreementNo;
                    EffectiveDate = cf.EffectiveDate.ToUniversalTime();
                    ExpiryDate = cf.ExpiryDate.ToUniversalTime();
                    TotalContractAmt = cf.TotalContractAmt;
                    ContractTypeId = cf.ContractTypeId;
                    Remarks = cf.Remarks;
                }
                catch (JsonException ex)
                {
                    throw new JsonException("Unable to convert jsonString to ContractForm object", ex);
                }
            }
        }

        public static ContractForm Parse(Dictionary<string, string> databaseSelectDictionary)
        {
            var ContractForm = new ContractForm();
            if (databaseSelectDictionary.ContainsKey(DB_ID))
            {
                ContractForm.id = Int32.Parse(databaseSelectDictionary[DB_ID]);
            }
            if (databaseSelectDictionary.ContainsKey(User_ID))
            {
                ContractForm.UserId = Int32.Parse(databaseSelectDictionary[User_ID]);
            }
            if (databaseSelectDictionary.ContainsKey(CUSTOMER_ID))
            {
                ContractForm.CustomerId = Int32.Parse(databaseSelectDictionary[CUSTOMER_ID]);
            }
            if (databaseSelectDictionary.ContainsKey(AGREEMENT_NO))
            {
                ContractForm.AgreementNo = databaseSelectDictionary[AGREEMENT_NO];
            }
            if (databaseSelectDictionary.ContainsKey(EFFECTIVE_DATE))
            {
                ContractForm.EffectiveDate = DateTime.Parse(databaseSelectDictionary[EFFECTIVE_DATE]);
            }
            if (databaseSelectDictionary.ContainsKey(EXPIRY_DATE))
            {
                ContractForm.ExpiryDate = DateTime.Parse(databaseSelectDictionary[EXPIRY_DATE]);
            }
            if (databaseSelectDictionary.ContainsKey(TOTAL_CONTRACT_AMT))
            {
                ContractForm.TotalContractAmt = double.Parse(databaseSelectDictionary[TOTAL_CONTRACT_AMT]);
            }
            if (databaseSelectDictionary.ContainsKey(CONTRACT_TYPE_ID))
            {
                ContractForm.ContractTypeId = Int32.Parse(databaseSelectDictionary[CONTRACT_TYPE_ID]);
            }
            if (databaseSelectDictionary.ContainsKey(REMARK))
            {
                ContractForm.Remarks = databaseSelectDictionary[REMARK];
            }
            if (databaseSelectDictionary.ContainsKey(STATUS_FLG))
            {
                ContractForm.StatusFlg = Int32.Parse(databaseSelectDictionary[STATUS_FLG]);
            }
            return ContractForm;
        }

    }
}
